From c2fcd84f7a9c9d108a5ba4b1a18a41943de724c7 Mon Sep 17 00:00:00 2001
From: Mathias Gredal <mathiasgredal@icloud.com>
Date: Thu, 20 Mar 2025 06:39:13 +0100
Subject: [PATCH] Testing

---
 arch/arm64/configs/neoboot_defconfig | 57 ++++++++++++++++++++++++++++
 arch/arm64/kernel/elfcore.c          | 25 ++++++------
 2 files changed, 69 insertions(+), 13 deletions(-)
 create mode 100644 arch/arm64/configs/neoboot_defconfig

diff --git a/arch/arm64/configs/neoboot_defconfig b/arch/arm64/configs/neoboot_defconfig
new file mode 100644
index 000000000..9a9e4e538
--- /dev/null
+++ b/arch/arm64/configs/neoboot_defconfig
@@ -0,0 +1,57 @@
+CONFIG_SYSVIPC=y
+CONFIG_POSIX_MQUEUE=y
+CONFIG_NO_HZ_IDLE=y
+CONFIG_HIGH_RES_TIMERS=y
+CONFIG_TASKSTATS=y
+CONFIG_MEMCG=y
+CONFIG_BLK_CGROUP=y
+CONFIG_CPUSETS=y
+CONFIG_CGROUP_DEVICE=y
+CONFIG_CGROUP_CPUACCT=y
+CONFIG_SCHED_AUTOGROUP=y
+CONFIG_PROFILING=y
+CONFIG_ARCH_VEXPRESS=y
+CONFIG_COMPAT=y
+CONFIG_ACPI=y
+CONFIG_MODULES=y
+CONFIG_MODULE_UNLOAD=y
+CONFIG_BLK_DEV_BSGLIB=y
+CONFIG_BINFMT_MISC=y
+CONFIG_TRANSPARENT_HUGEPAGE=y
+CONFIG_NET=y
+CONFIG_PACKET=y
+CONFIG_PACKET_DIAG=y
+CONFIG_UNIX=y
+CONFIG_NET_KEY=y
+CONFIG_INET=y
+CONFIG_IP_MULTICAST=y
+CONFIG_NET_SCHED=y
+CONFIG_VSOCKETS=y
+CONFIG_DEVTMPFS=y
+CONFIG_DEVTMPFS_MOUNT=y
+CONFIG_FW_CFG_SYSFS=y
+CONFIG_FW_CFG_SYSFS_CMDLINE=y
+CONFIG_VIRTIO_BLK=y
+CONFIG_NETDEVICES=y
+CONFIG_MACVLAN=y
+CONFIG_VIRTIO_NET=y
+CONFIG_NLMON=y
+CONFIG_INPUT_EVDEV=y
+CONFIG_SERIAL_AMBA_PL011=y
+CONFIG_SERIAL_AMBA_PL011_CONSOLE=y
+CONFIG_VIRTIO_CONSOLE=y
+CONFIG_HW_RANDOM=y
+CONFIG_HW_RANDOM_VIRTIO=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_DRV_PL031=y
+CONFIG_VIRTIO_INPUT=y
+CONFIG_VIRTIO_MMIO=y
+CONFIG_VIRTIO_MMIO_CMDLINE_DEVICES=y
+CONFIG_MAILBOX=y
+CONFIG_PL320_MBOX=y
+CONFIG_ARM_SMMU_V3=y
+CONFIG_VIRTIO_FS=y
+CONFIG_OVERLAY_FS=y
+CONFIG_TMPFS=y
+CONFIG_TMPFS_POSIX_ACL=y
+CONFIG_BLK_DEV_INITRD=y
\ No newline at end of file
diff --git a/arch/arm64/kernel/elfcore.c b/arch/arm64/kernel/elfcore.c
index 2e94d20c4..d5b5fdd5b 100644
--- a/arch/arm64/kernel/elfcore.c
+++ b/arch/arm64/kernel/elfcore.c
@@ -8,11 +8,10 @@
 #include <asm/cpufeature.h>
 #include <asm/mte.h>
 
-#define for_each_mte_vma(cprm, i, m)					\
-	if (system_supports_mte())					\
-		for (i = 0, m = cprm->vma_meta;				\
-		     i < cprm->vma_count;				\
-		     i++, m = cprm->vma_meta + i)			\
+#define for_each_mte_vma(cprm, i, m)                                 \
+	if (system_supports_mte())                                   \
+		for (i = 0, m = cprm->vma_meta; i < cprm->vma_count; \
+		     i++, m = cprm->vma_meta + i)                    \
 			if (m->flags & VM_MTE)
 
 static unsigned long mte_vma_tag_dump_size(struct core_vma_metadata *m)
@@ -21,8 +20,8 @@ static unsigned long mte_vma_tag_dump_size(struct core_vma_metadata *m)
 }
 
 /* Derived from dump_user_range(); start/end must be page-aligned */
-static int mte_dump_tag_range(struct coredump_params *cprm,
-			      unsigned long start, unsigned long len)
+static int mte_dump_tag_range(struct coredump_params *cprm, unsigned long start,
+			      unsigned long len)
 {
 	int ret = 1;
 	unsigned long addr;
@@ -81,8 +80,7 @@ Elf_Half elf_core_extra_phdrs(struct coredump_params *cprm)
 	struct core_vma_metadata *m;
 	int vma_count = 0;
 
-	for_each_mte_vma(cprm, i, m)
-		vma_count++;
+	for_each_mte_vma(cprm, i, m) vma_count++;
 
 	return vma_count;
 }
@@ -92,7 +90,8 @@ int elf_core_write_extra_phdrs(struct coredump_params *cprm, loff_t offset)
 	int i;
 	struct core_vma_metadata *m;
 
-	for_each_mte_vma(cprm, i, m) {
+	for_each_mte_vma(cprm, i, m)
+	{
 		struct elf_phdr phdr;
 
 		phdr.p_type = PT_AARCH64_MEMTAG_MTE;
@@ -118,8 +117,7 @@ size_t elf_core_extra_data_size(struct coredump_params *cprm)
 	struct core_vma_metadata *m;
 	size_t data_size = 0;
 
-	for_each_mte_vma(cprm, i, m)
-		data_size += mte_vma_tag_dump_size(m);
+	for_each_mte_vma(cprm, i, m) data_size += mte_vma_tag_dump_size(m);
 
 	return data_size;
 }
@@ -129,7 +127,8 @@ int elf_core_write_extra_data(struct coredump_params *cprm)
 	int i;
 	struct core_vma_metadata *m;
 
-	for_each_mte_vma(cprm, i, m) {
+	for_each_mte_vma(cprm, i, m)
+	{
 		if (!mte_dump_tag_range(cprm, m->start, m->dump_size))
 			return 0;
 	}
-- 
2.39.3 (Apple Git-146)

